@prefix bf: <http://id.loc.gov/ontologies/bibframe/>.
@prefix bflc: <http://id.loc.gov/ontologies/bflc/>.
@prefix dbo: <http://dbpedia.org/ontology/>.
@prefix ex: <http://example.org/rules/>.
@prefix madsrdf: <http://www.loc.gov/mads/rdf/v1#>.
@prefix rdac: <http://rdaregistry.info/Elements/c/>.
@prefix rdae: <http://rdaregistry.info/Elements/e/>.
@prefix rdai: <http://rdaregistry.info/Elements/i/>.
@prefix rdam: <http://rdaregistry.info/Elements/m/>.
@prefix rdamdt: <http://rdaregistry.info/Elements/m/datatype/>.
@prefix rdau: <http://rdaregistry.info/Elements/u/>.
@prefix rdaw: <http://rdaregistry.info/Elements/w/>.
@prefix rdax: <https://doi.org/10.6069/uwlib.55.d.4#>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix schema: <http://schema.org/>.
@prefix sin: <http://sinopia.io/vocabulary/>.
@prefix skos: <http://www.w3.org/2004/02/skos/core#>.

ex:ItemMap a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[type/@resource='http://rdaregistry.info/Elements/c/C10003']"
  ].

ex:ItemMap rr:subjectMap [
  rml:reference "@about";
  rr:class bf:Item
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:adminMetadata;
  rr:objectMap [
    rr:parentTriplesMap ex:AdminMetadataMap
  ]
].

ex:AdminMetadataMap a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[catalogerID]"
  ].

ex:AdminMetadataMap rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:AdminMetadata
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bflc:catalogerID;
  rr:objectMap [
    rml:reference "catalogerID[@lang]";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "catalogerID/@lang"
    ]
  ]
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bflc:catalogerID;
  rr:objectMap [
    rml:reference "catalogerID[not(@lang)]";
    rr:termType rr:Literal
  ]
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bf:status;
  rr:objectMap [
    rr:parentTriplesMap ex:StatusMap
  ]
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bflc:encodingLevel;
  rr:objectMap [
    rml:reference "encodingLevel/@resource";
    rr:termType rr:IRI
  ]
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bf:descriptionConventions;
  rr:objectMap [
    rml:reference "descriptionConventions/@resource";
    rr:termType rr:IRI
  ]
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bf:source;
  rr:objectMap [
    rml:reference "source/@resource";
    rr:termType rr:IRI
  ]
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bf:descriptionLanguage;
  rr:objectMap [
    rml:reference "descriptionLanguage/@resource";
    rr:termType rr:IRI
  ]
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bf:creationDate;
  rr:objectMap [
    rml:reference "creationDate";
    rr:termType rr:Literal
  ]
].

ex:AdminMetadataMap rr:predicateObjectMap [
  rr:predicate bf:changeDate;
  rr:objectMap [
    rml:reference "changeDate";
    rr:termType rr:Literal
  ]
].

ex:StatusMap a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[code]"
  ].

ex:StatusMap rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Status
].

ex:StatusMap rr:predicateObjectMap [
  rr:predicate bf:code;
  rr:objectMap [
    rml:reference "code"
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [
    rml:reference "P40083[@lang]";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "P40083/@lang"
    ]
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate rdfs:label;
  rr:objectMap [
    rml:reference "P40083[not(@lang)]";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:identifiedBy;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Authorizedaccesspoint_Map
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:identifiedBy;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Authorizedaccesspoint_Map
  ]
].

ex:Lang_Authorizedaccesspoint_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/P40083[@lang]"
  ].

ex:Not_Lang_Authorizedaccesspoint_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/P40083[not(@lang)]"
  ].

ex:Lang_Authorizedaccesspoint_Map rr:subjectMap [
  rr:termType rr:BlankNode;
	rr:class bf:Identifier
].

ex:Not_Lang_Authorizedaccesspoint_Map rr:subjectMap [
  rr:termType rr:BlankNode;
	rr:class bf:Identifier
].

ex:Lang_Authorizedaccesspoint_Map rr:predicateObjectMap [
  rr:predicate rdf:value;
	rr:objectMap [
	  rml:reference ".";
		rr:termType rr:Literal;
		rml:languageMap [
		  rml:reference "@lang"
		]
	]
].

ex:Not_Lang_Authorizedaccesspoint_Map rr:predicateObjectMap [
  rr:predicate rdf:value;
	rr:objectMap [
	  rml:reference ".";
		rr:termType rr:Literal
	]
].

ex:Lang_Authorizedaccesspoint_Map rr:predicateObjectMap [
  rr:predicate bf:note;
	rr:objectMap [
	  rr:parentTriplesMap ex:Authorizedaccesspoint_Note_Map
	]
].

ex:Not_Lang_Authorizedaccesspoint_Map rr:predicateObjectMap [
  rr:predicate bf:note;
	rr:objectMap [
	  rr:parentTriplesMap ex:Authorizedaccesspoint_Note_Map
	]
].

ex:Lang_Authorizedaccesspoint_Map rr:predicateObjectMap [
  rr:predicate bf:source;
	rr:objectMap [
	  rr:parentTriplesMap ex:Accesspoint_Source_Map
	]
].

ex:Not_Lang_Authorizedaccesspoint_Map rr:predicateObjectMap [
  rr:predicate bf:source;
	rr:objectMap [
	  rr:parentTriplesMap ex:Accesspoint_Source_Map
	]
].

ex:Authorizedaccesspoint_Note_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[P40083]"
  ].

ex:Authorizedaccesspoint_Note_Map rr:subjectMap [
		rr:termType rr:BlankNode;
		rr:class bf:Note
].

ex:Authorizedaccesspoint_Note_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
	rr:objectMap [
	  rr:constant "Authorized access point";
		rr:termType rr:Literal;
		rr:language "en"
	]
].

ex:Authorizedaccesspoint_Note_Map rr:predicateObjectMap [
  rr:predicate bf:noteType;
	rr:objectMap [
	  rr:constant "type of identifier";
		rr:termType rr:Literal;
		rr:language "en"
	]
].

ex:Accesspoint_Source_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[P40083 or P40084]"
  ].

ex:Accesspoint_Source_Map rr:subjectMap [
		rr:termType rr:BlankNode;
		rr:class bf:Source
].

ex:Accesspoint_Source_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
	rr:objectMap [
	  rr:constant "RDA";
		rr:termType rr:Literal;
		rr:language "en"
	]
].
ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:identifiedBy;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Variantaccesspoint_Map
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:identifiedBy;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Variantaccesspoint_Map
  ]
].

ex:Lang_Variantaccesspoint_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/P40084[@lang]"
  ].

ex:Not_Lang_Variantaccesspoint_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/P40084[not(@lang)]"
  ].

ex:Lang_Variantaccesspoint_Map rr:subjectMap [
  rr:termType rr:BlankNode;
	rr:class bf:Identifier
].

ex:Not_Lang_Variantaccesspoint_Map rr:subjectMap [
  rr:termType rr:BlankNode;
	rr:class bf:Identifier
].

ex:Lang_Variantaccesspoint_Map rr:predicateObjectMap [
  rr:predicate rdf:value;
	rr:objectMap [
	  rml:reference ".";
		rr:termType rr:Literal;
		rml:languageMap [
		  rml:reference "@lang"
		]
	]
].

ex:Not_Lang_Variantaccesspoint_Map rr:predicateObjectMap [
  rr:predicate rdf:value;
	rr:objectMap [
	  rml:reference ".";
		rr:termType rr:Literal
	]
].

ex:Lang_Variantaccesspoint_Map rr:predicateObjectMap [
  rr:predicate bf:note;
	rr:objectMap [
	  rr:parentTriplesMap ex:Variantaccesspoint_Note_Map
	]
].

ex:Not_Lang_Variantaccesspoint_Map rr:predicateObjectMap [
  rr:predicate bf:note;
	rr:objectMap [
	  rr:parentTriplesMap ex:Variantaccesspoint_Note_Map
	]
].

ex:Lang_Variantaccesspoint_Map rr:predicateObjectMap [
  rr:predicate bf:source;
	rr:objectMap [
	  rr:parentTriplesMap ex:Accesspoint_Source_Map
	]
].

ex:Not_Lang_Variantaccesspoint_Map rr:predicateObjectMap [
  rr:predicate bf:source;
	rr:objectMap [
	  rr:parentTriplesMap ex:Accesspoint_Source_Map
	]
].

ex:Variantaccesspoint_Note_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[P40084]"
  ].

ex:Variantaccesspoint_Note_Map rr:subjectMap [
		rr:termType rr:BlankNode;
		rr:class bf:Note
].

ex:Variantaccesspoint_Note_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
	rr:objectMap [
	  rr:constant "Variant access point";
		rr:termType rr:Literal;
		rr:language "en"
	]
].

ex:Variantaccesspoint_Note_Map rr:predicateObjectMap [
  rr:predicate bf:noteType;
	rr:objectMap [
	  rr:constant "type of identifier";
		rr:termType rr:Literal;
		rr:language "en"
	]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:contribution;
  rr:objectMap [
    rr:parentTriplesMap ex:IRI_Contribution_hasContributorAgent_Map
  ]
].

ex:IRI_Contribution_hasContributorAgent_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[hasContributorAgent[not(@resource)][@lang]]"
  ].

ex:IRI_Contribution_hasContributorAgent_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Contribution
].

ex:IRI_Contribution_hasContributorAgent_Map rr:predicateObjectMap [
  rr:predicate bf:agent;
    rr:objectMap [
    rml:reference "hasContributorAgent/@resource";
    rr:termType rr:IRI
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:contribution;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Contribution_hasContributorAgent_Map
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:contribution;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Contribution_hasContributorAgent_Map
  ]
].

ex:Lang_Contribution_hasContributorAgent_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[hasContributorAgent[not(@resource)][@lang]]"
  ].

ex:Not_Lang_Contribution_hasContributorAgent_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[hasContributorAgent[not(@resource) and not(@lang)]]"
  ].

ex:Lang_Contribution_hasContributorAgent_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Contribution
].

ex:Not_Lang_Contribution_hasContributorAgent_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Contribution
].

ex:Lang_Contribution_hasContributorAgent_Map rr:predicateObjectMap [
  rr:predicate bf:agent;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Agent_hasContributorAgent_Map
  ]
].

ex:Not_Lang_Contribution_hasContributorAgent_Map rr:predicateObjectMap [
  rr:predicate bf:agent;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Agent_hasContributorAgent_Map
  ]
].

ex:Lang_Contribution_hasContributorAgent_Map rr:predicateObjectMap [
  rr:predicate bf:agent;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Agent_hasContributorAgent_Map
  ]
].

ex:Not_Lang_Contribution_hasContributorAgent_Map rr:predicateObjectMap [
  rr:predicate bf:agent;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Agent_hasContributorAgent_Map
  ]
].

ex:Lang_Agent_hasContributorAgent_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasContributorAgent[not(@resource)][@lang]"
  ].

ex:Not_Lang_Agent_hasContributorAgent_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasContributorAgent[not(@resource) and not(@lang)]"
  ].

ex:Lang_Agent_hasContributorAgent_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Agent
].

ex:Not_Lang_Agent_hasContributorAgent_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Agent
].

ex:Lang_Agent_hasContributorAgent_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "@lang"
    ]
  ]
].

ex:Not_Lang_Agent_hasContributorAgent_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:heldBy;
    rr:objectMap [
    rml:reference "heldBy/@resource";
    rr:termType rr:IRI
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:heldBy;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Heldby_heldBy_Map
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:heldBy;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Heldby_heldBy_Map
  ]
].

ex:Lang_Heldby_heldBy_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/heldBy[not(@resource)][@lang]"
  ].

ex:Not_Lang_Heldby_heldBy_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/heldBy[not(@resource) and not(@lang)]"
  ].

ex:Lang_Heldby_heldBy_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Agent
].

ex:Not_Lang_Heldby_heldBy_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Agent
].

ex:Lang_Heldby_heldBy_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "@lang"
    ]
  ]
].

ex:Not_Lang_Heldby_heldBy_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:classification;
  rr:objectMap [
    rr:parentTriplesMap ex:Classification_Lcc_Map
  ]
].

ex:Classification_Lcc_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[hasLcClassificationPartA or hasLcClassificationPartB]"
  ].

ex:Classification_Lcc_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:ClassificationLcc
].

ex:Classification_Lcc_Map rr:predicateObjectMap [
  rr:predicate bf:classificationPortion;
    rr:objectMap [
    rml:reference "hasLcClassificationPartA";
    rr:termType rr:Literal
  ]
].

ex:Classification_Lcc_Map rr:predicateObjectMap [
  rr:predicate bf:itemPortion;
    rr:objectMap [
    rml:reference "hasLcClassificationPartB";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:classification;
  rr:objectMap [
    rr:parentTriplesMap ex:Classification_Nlm_Map
  ]
].

ex:Classification_Nlm_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[hasNlmClassificationPartA or hasNlmClassificationPartB]"
  ].

ex:Classification_Nlm_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:ClassificationNlm
].

ex:Classification_Nlm_Map rr:predicateObjectMap [
  rr:predicate bf:classificationPortion;
    rr:objectMap [
    rml:reference "hasNlmClassificationPartA";
    rr:termType rr:Literal
  ]
].

ex:Classification_Nlm_Map rr:predicateObjectMap [
  rr:predicate bf:itemPortion;
    rr:objectMap [
    rml:reference "hasNlmClassificationPartB";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:classification;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Classification_hasSuDocClassificationNumber_Map
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:classification;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Classification_hasSuDocClassificationNumber_Map
  ]
].

ex:Lang_Classification_hasSuDocClassificationNumber_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasSuDocClassificationNumber[not(@resource)][@lang]"
  ].

ex:Not_Lang_Classification_hasSuDocClassificationNumber_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasSuDocClassificationNumber[not(@resource) and not(@lang)]"
  ].

ex:Lang_Classification_hasSuDocClassificationNumber_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Classification
].

ex:Not_Lang_Classification_hasSuDocClassificationNumber_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Classification
].

ex:Lang_Classification_hasSuDocClassificationNumber_Map rr:predicateObjectMap [
  rr:predicate bf:source;
  rr:objectMap [
    rr:constant "http://id.loc.gov/vocabulary/classSchemes/sudocs";
    rr:termType rr:IRI
  ]
].

ex:Not_Lang_Classification_hasSuDocClassificationNumber_Map rr:predicateObjectMap [
  rr:predicate bf:source;
  rr:objectMap [
    rr:constant "http://id.loc.gov/vocabulary/classSchemes/sudocs";
    rr:termType rr:IRI
  ]
].

ex:Lang_Classification_hasSuDocClassificationNumber_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "@lang"
    ]
  ]
].

ex:Not_Lang_Classification_hasSuDocClassificationNumber_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:shelfMark;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Shelfmark_hasCallNumber_Map
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:shelfMark;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Shelfmark_hasCallNumber_Map
  ]
].

ex:Lang_Shelfmark_hasCallNumber_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasCallNumber[not(@resource)][@lang]"
  ].

ex:Not_Lang_Shelfmark_hasCallNumber_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasCallNumber[not(@resource) and not(@lang)]"
  ].

ex:Lang_Shelfmark_hasCallNumber_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:ShelfMark
].

ex:Not_Lang_Shelfmark_hasCallNumber_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:ShelfMark
].

ex:Lang_Shelfmark_hasCallNumber_Map rr:predicateObjectMap [
  rr:predicate rdf:value;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "@lang"
    ]
  ]
].

ex:Not_Lang_Shelfmark_hasCallNumber_Map rr:predicateObjectMap [
  rr:predicate rdf:value;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:physicalLocation;
    rr:objectMap [
    rml:reference "hasPhysicalLocation/@resource";
    rr:termType rr:IRI
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:physicalLocation;
    rr:objectMap [
    rml:reference "hasPhysicalLocation[not(@resource)][@lang]";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "hasPhysicalLocation/@lang"
    ]
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:physicalLocation;
  rr:objectMap [
    rml:reference "hasPhysicalLocation[not(@resource) and not(@lang)]";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:sublocation;
    rr:objectMap [
    rml:reference "hasPhysicalSubLocation/@resource";
    rr:termType rr:IRI
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:sublocation;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Sublocation_hasPhysicalSubLocation_Map
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:sublocation;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Sublocation_hasPhysicalSubLocation_Map
  ]
].

ex:Lang_Sublocation_hasPhysicalSubLocation_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasPhysicalSubLocation[not(@resource)][@lang]"
  ].

ex:Not_Lang_Sublocation_hasPhysicalSubLocation_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasPhysicalSubLocation[not(@resource) and not(@lang)]"
  ].

ex:Lang_Sublocation_hasPhysicalSubLocation_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Sublocation
].

ex:Not_Lang_Sublocation_hasPhysicalSubLocation_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Sublocation
].

ex:Lang_Sublocation_hasPhysicalSubLocation_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "@lang"
    ]
  ]
].

ex:Not_Lang_Sublocation_hasPhysicalSubLocation_Map rr:predicateObjectMap [
  rr:predicate rdfs:label;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:identifier;
  rr:objectMap [
    rr:parentTriplesMap ex:Lang_Identifier_hasBarcode_Map
  ]
].

ex:ItemMap rr:predicateObjectMap [
  rr:predicate bf:identifier;
  rr:objectMap [
    rr:parentTriplesMap ex:Not_Lang_Identifier_hasBarcode_Map
  ]
].

ex:Lang_Identifier_hasBarcode_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasBarcode[not(@resource)][@lang]"
  ].

ex:Not_Lang_Identifier_hasBarcode_Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/input/!!itemID!!.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description/hasBarcode[not(@resource) and not(@lang)]"
  ].

ex:Lang_Identifier_hasBarcode_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Barcode
].

ex:Not_Lang_Identifier_hasBarcode_Map rr:subjectMap [
  rr:termType rr:BlankNode;
  rr:class bf:Barcode
].

ex:Lang_Identifier_hasBarcode_Map rr:predicateObjectMap [
  rr:predicate rdf:value;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal;
    rml:languageMap [
      rml:reference "@lang"
    ]
  ]
].

ex:Not_Lang_Identifier_hasBarcode_Map rr:predicateObjectMap [
  rr:predicate rdf:value;
    rr:objectMap [
    rml:reference ".";
    rr:termType rr:Literal
  ]
].

