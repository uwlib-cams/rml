# F + R...
  # {1} --> work, expression, manifestation, or item
  # {2} --> filename
  # {3} --> Work, Expression, Manifestation, or Item
  # {4} --> RDA property name (all one word, first letter capitalized)
  # {5} --> RDA property number

# add to Work/Expression/Manifestation/Item map

ex:{3}Map rr:predicateObjectMap [
  rr:predicate bf:hasDerivative;
  rr:objectMap [
    rr:parentTriplesMap ex:{4}Map
  ]
].

ex:{3}Map rr:predicateObjectMap [
  rr:predicate bf:hasDerivative;
  rr:objectMap [
    rml:reference "P{5}/@resource";
    rr:termType rr:IRI
  ]
].

# new triples maps

ex:{4}Map a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/rdfxml/data/{1}/{2}.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[P{5}[not(@resource)]]"
  ].

  ex:{4}Map rr:subjectMap [
    rr:termType rr:BlankNode;
    rr:class bf:Work
  ].

  ex:{4}Map rr:predicateObjectMap [
    rr:predicate rdfs:label;
    rr:objectMap [
      rml:reference "P{5}[not(@resource)][@lang]";
      rr:termType rr:Literal;
      rml:languageMap [
        rml:reference "P{5}/@lang"
      ]
    ]
  ].

  ex:{4}Map rr:predicateObjectMap [
    rr:predicate rdfs:label;
    rr:objectMap [
      rml:reference "P{5}[not(@resource) and not(@lang)]";
      rr:termType rr:Literal
    ]
  ].
