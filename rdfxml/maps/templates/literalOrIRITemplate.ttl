# F + R...
  # {1} --> work, expression, manifestation, or item
  # {2} --> filename
  # {3} --> RDA property name (all one word, first letter capitalized)
  # {4} --> BF property name
  # {5} --> RDA property number
  # {6} --> BF class name
  # {7} --> predicate for literal value

# add to Work/Expression/Manifestation/Item map

  ex:ExpressionMap rr:predicateObjectMap [
    rr:predicate bf:{4};
    rr:objectMap [
      rr:parentTriplesMap ex:{3}
    ]
  ].

  ex:ExpressionMap rr:predicateObjectMap [
    rr:predicate bf:{4};
    rr:objectMap [
      rml:reference "P{5}/@resource";
      rr:termType rr:IRI
    ]
  ].

# new triples maps

ex:{3}LiteralMap a rr:TriplesMap;
  rml:logicalSource [
    rml:source "/home/mcm104/rml/rdfxml/data/{1}/{2}.xml";
    rml:referenceFormulation ql:XPath;
    rml:iterator "/RDF/Description[P{5}[not(@resource)]]"
  ].

  ex:{3}LiteralMap rr:subjectMap [
    rr:termType rr:BlankNode;
    rr:class bf:{6}
  ].

  ex:{3}LiteralMap rr:predicateObjectMap [
    rr:predicate {7};
    rr:objectMap [
      rml:reference "P{5}[not(@resource)]";
      rr:termType rr:Literal;
      rml:languageMap [
        rml:reference "P{5}/@lang"
      ]
    ]
  ].
